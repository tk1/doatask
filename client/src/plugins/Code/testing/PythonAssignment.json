{
    "assignments": [
        {
            "id": 3,
            "title": "Python Test",
            "description": "This is a test with Python examples",
            "type": null,
            "public": true,
            "dueDate": null,
            "createdAt": "2021-11-25T14:06:20.577Z",
            "updatedAt": "2021-11-25T14:06:20.577Z",
            "assignmentTasks": [
                {
                    "assignmentId": 3,
                    "taskId": 10,
                    "order": 0,
                    "weight": 10,
                    "timeLimit": null,
                    "id": 10,
                    "createdAt": "2021-11-25T14:06:38.603Z",
                    "updatedAt": "2021-11-25T14:06:38.603Z"
                },
                {
                    "assignmentId": 3,
                    "taskId": 11,
                    "order": 1,
                    "weight": 10,
                    "timeLimit": null,
                    "id": 11,
                    "createdAt": "2021-11-25T14:06:40.485Z",
                    "updatedAt": "2021-11-25T14:06:40.485Z"
                },
                {
                    "assignmentId": 3,
                    "taskId": 12,
                    "order": 2,
                    "weight": 10,
                    "timeLimit": null,
                    "id": 12,
                    "createdAt": "2021-11-25T14:06:41.782Z",
                    "updatedAt": "2021-11-25T14:06:41.782Z"
                },
                {
                    "assignmentId": 3,
                    "taskId": 13,
                    "order": 3,
                    "weight": 10,
                    "timeLimit": null,
                    "id": 13,
                    "createdAt": "2021-11-25T14:06:43.027Z",
                    "updatedAt": "2021-11-25T14:06:43.027Z"
                },
                {
                    "assignmentId": 3,
                    "taskId": 14,
                    "order": 4,
                    "weight": 10,
                    "timeLimit": null,
                    "id": 14,
                    "createdAt": "2021-11-25T14:06:44.268Z",
                    "updatedAt": "2021-11-25T14:06:44.268Z"
                },
                {
                    "assignmentId": 3,
                    "taskId": 15,
                    "order": 5,
                    "weight": 10,
                    "timeLimit": null,
                    "id": 15,
                    "createdAt": "2021-11-25T14:06:46.452Z",
                    "updatedAt": "2021-11-25T14:06:46.452Z"
                },
                {
                    "assignmentId": 3,
                    "taskId": 16,
                    "order": 6,
                    "weight": 10,
                    "timeLimit": null,
                    "id": 16,
                    "createdAt": "2021-11-25T14:06:47.839Z",
                    "updatedAt": "2021-11-25T14:06:47.839Z"
                }
            ],
            "owner": {
                "id": 1,
                "ltiid": null,
                "name": "admin",
                "role": "admin",
                "origin": "local",
                "isActive": true
            }
        }
    ],
    "tasks": [
        {
            "id": 16,
            "title": "Power",
            "description": "Given base and exp. Calculate base to the power of exp.\nExample: power(2,3) = 8",
            "public": true,
            "rating": null,
            "tags": [
                "Code"
            ],
            "plugin": "Code",
            "details": {
                "language": "Python",
                "methodStub": {
                    "functionName": "power",
                    "parameter": [
                        {
                            "name": "base",
                            "type": "int"
                        },
                        {
                            "name": "exp",
                            "type": "int"
                        }
                    ],
                    "returnType": "int"
                },
                "testSuite": {
                    "publicTests": [
                        {
                            "testParameter": [
                                0,
                                0
                            ],
                            "expectedOutput": 1
                        },
                        {
                            "testParameter": [
                                2,
                                2
                            ],
                            "expectedOutput": 4
                        },
                        {
                            "testParameter": [
                                3,
                                5
                            ],
                            "expectedOutput": 243
                        }
                    ],
                    "secretTests": [
                        {
                            "testParameter": [
                                -3,
                                2
                            ],
                            "expectedOutput": 9
                        },
                        {
                            "testParameter": [
                                -1,
                                0
                            ],
                            "expectedOutput": 1
                        }
                    ]
                }
            },
            "createdAt": "2021-11-25T13:37:29.056Z",
            "updatedAt": "2021-11-25T13:37:29.056Z",
            "domain": {
                "id": 2,
                "name": "Code",
                "description": "Domain for the code plugin",
                "createdAt": "2021-11-25T13:33:57.099Z",
                "updatedAt": "2021-11-25T13:34:27.205Z"
            },
            "owner": {
                "id": 1,
                "ltiid": null,
                "name": "admin",
                "role": "admin",
                "origin": "local",
                "isActive": true
            }
        },
        {
            "id": 15,
            "title": "StringLengthSearch",
            "description": "Given an array of string a and an array of integers b. Check if each element of b can be mapped to a string of the length of the value of the element. Each string can only be mapped to one element.\nExample: stringLengthSearch([\"a\", \"bb\", 1,1,2]) = [true,false,true]",
            "public": true,
            "rating": null,
            "tags": [
                "Code"
            ],
            "plugin": "Code",
            "details": {
                "language": "Python",
                "methodStub": {
                    "functionName": "stringLengthSearch",
                    "parameter": [
                        {
                            "name": "a",
                            "type": "stringArray"
                        },
                        {
                            "name": "b",
                            "type": "intArray"
                        }
                    ],
                    "returnType": "booleanArray"
                },
                "testSuite": {
                    "publicTests": [
                        {
                            "testParameter": [
                                [
                                    "a",
                                    "aa",
                                    "aaa"
                                ],
                                [
                                    1,
                                    2,
                                    3
                                ]
                            ],
                            "expectedOutput": [
                                true,
                                true,
                                true
                            ]
                        },
                        {
                            "testParameter": [
                                [
                                    "a",
                                    "bb"
                                ],
                                [
                                    1,
                                    2,
                                    3
                                ]
                            ],
                            "expectedOutput": [
                                true,
                                true,
                                false
                            ]
                        },
                        {
                            "testParameter": [
                                [
                                    "a",
                                    "b",
                                    "cc",
                                    "dd"
                                ],
                                [
                                    1,
                                    1,
                                    2,
                                    2
                                ]
                            ],
                            "expectedOutput": [
                                true,
                                true,
                                true,
                                true
                            ]
                        },
                        {
                            "testParameter": [
                                [
                                    "a",
                                    "b",
                                    "cc",
                                    "ddd"
                                ],
                                [
                                    3,
                                    2,
                                    1,
                                    1,
                                    1
                                ]
                            ],
                            "expectedOutput": [
                                true,
                                true,
                                true,
                                true,
                                false
                            ]
                        },
                        {
                            "testParameter": [
                                [
                                    "",
                                    "a",
                                    "bb",
                                    "ccc"
                                ],
                                [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4
                                ]
                            ],
                            "expectedOutput": [
                                true,
                                true,
                                true,
                                true,
                                false
                            ]
                        }
                    ],
                    "secretTests": [
                        {
                            "testParameter": [
                                [
                                    ""
                                ],
                                [
                                    0
                                ]
                            ],
                            "expectedOutput": [
                                true
                            ]
                        },
                        {
                            "testParameter": [
                                [
                                    "a",
                                    "a",
                                    "a",
                                    "a"
                                ],
                                [
                                    1,
                                    1,
                                    1,
                                    1,
                                    1
                                ]
                            ],
                            "expectedOutput": [
                                true,
                                true,
                                true,
                                true,
                                false
                            ]
                        },
                        {
                            "testParameter": [
                                [
                                    "a",
                                    "a",
                                    "a",
                                    "a",
                                    "a"
                                ],
                                [
                                    1,
                                    1,
                                    1,
                                    1
                                ]
                            ],
                            "expectedOutput": [
                                true,
                                true,
                                true,
                                true
                            ]
                        },
                        {
                            "testParameter": [
                                [
                                    "",
                                    "aa",
                                    "aabb",
                                    "aabbcc"
                                ],
                                [
                                    0,
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6
                                ]
                            ],
                            "expectedOutput": [
                                true,
                                false,
                                true,
                                false,
                                true,
                                false,
                                true
                            ]
                        },
                        {
                            "testParameter": [
                                [
                                    "a",
                                    "aaa",
                                    "aabaa"
                                ],
                                [
                                    2,
                                    4,
                                    6,
                                    3,
                                    3
                                ]
                            ],
                            "expectedOutput": [
                                false,
                                false,
                                false,
                                true,
                                false
                            ]
                        }
                    ]
                }
            },
            "createdAt": "2021-11-25T13:37:29.056Z",
            "updatedAt": "2021-11-25T13:37:29.056Z",
            "domain": {
                "id": 2,
                "name": "Code",
                "description": "Domain for the code plugin",
                "createdAt": "2021-11-25T13:33:57.099Z",
                "updatedAt": "2021-11-25T13:34:27.205Z"
            },
            "owner": {
                "id": 1,
                "ltiid": null,
                "name": "admin",
                "role": "admin",
                "origin": "local",
                "isActive": true
            }
        },
        {
            "id": 14,
            "title": "n-th Prime",
            "description": "Given n calculate the n-th prime. Example: nthPrime(2) = 3. Contraints n>0 <= 1000",
            "public": true,
            "rating": null,
            "tags": [
                "Code"
            ],
            "plugin": "Code",
            "details": {
                "language": "Python",
                "methodStub": {
                    "functionName": "nthPrime",
                    "parameter": [
                        {
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "returnType": "int"
                },
                "testSuite": {
                    "publicTests": [
                        {
                            "testParameter": [
                                1
                            ],
                            "expectedOutput": 2
                        },
                        {
                            "testParameter": [
                                2
                            ],
                            "expectedOutput": 3
                        },
                        {
                            "testParameter": [
                                3
                            ],
                            "expectedOutput": 5
                        },
                        {
                            "testParameter": [
                                10
                            ],
                            "expectedOutput": 29
                        },
                        {
                            "testParameter": [
                                20
                            ],
                            "expectedOutput": 71
                        }
                    ],
                    "secretTests": [
                        {
                            "testParameter": [
                                81
                            ],
                            "expectedOutput": 419
                        },
                        {
                            "testParameter": [
                                201
                            ],
                            "expectedOutput": 1229
                        },
                        {
                            "testParameter": [
                                221
                            ],
                            "expectedOutput": 1381
                        },
                        {
                            "testParameter": [
                                821
                            ],
                            "expectedOutput": 6311
                        },
                        {
                            "testParameter": [
                                1000
                            ],
                            "expectedOutput": 7919
                        }
                    ]
                }
            },
            "createdAt": "2021-11-25T13:37:29.056Z",
            "updatedAt": "2021-11-25T13:37:29.056Z",
            "domain": {
                "id": 2,
                "name": "Code",
                "description": "Domain for the code plugin",
                "createdAt": "2021-11-25T13:33:57.099Z",
                "updatedAt": "2021-11-25T13:34:27.205Z"
            },
            "owner": {
                "id": 1,
                "ltiid": null,
                "name": "admin",
                "role": "admin",
                "origin": "local",
                "isActive": true
            }
        },
        {
            "id": 13,
            "title": "Quadrat",
            "description": "Given n calculate the quadrat of n. Example quadrat(3) = 9.",
            "public": true,
            "rating": null,
            "tags": [
                "Code"
            ],
            "plugin": "Code",
            "details": {
                "language": "Python",
                "methodStub": {
                    "functionName": "quadrat",
                    "parameter": [
                        {
                            "name": "n",
                            "type": "int"
                        }
                    ],
                    "returnType": "int"
                },
                "testSuite": {
                    "publicTests": [
                        {
                            "testParameter": [
                                0
                            ],
                            "expectedOutput": 0
                        },
                        {
                            "testParameter": [
                                2
                            ],
                            "expectedOutput": 4
                        },
                        {
                            "testParameter": [
                                3
                            ],
                            "expectedOutput": 9
                        }
                    ],
                    "secretTests": [
                        {
                            "testParameter": [
                                -3
                            ],
                            "expectedOutput": 9
                        }
                    ]
                }
            },
            "createdAt": "2021-11-25T13:37:29.056Z",
            "updatedAt": "2021-11-25T13:37:29.056Z",
            "domain": {
                "id": 2,
                "name": "Code",
                "description": "Domain for the code plugin",
                "createdAt": "2021-11-25T13:33:57.099Z",
                "updatedAt": "2021-11-25T13:34:27.205Z"
            },
            "owner": {
                "id": 1,
                "ltiid": null,
                "name": "admin",
                "role": "admin",
                "origin": "local",
                "isActive": true
            }
        },
        {
            "id": 12,
            "title": "Character Equality",
            "description": "Given two strings check if the string a is a permutation of string b.",
            "public": true,
            "rating": null,
            "tags": [
                "Code"
            ],
            "plugin": "Code",
            "details": {
                "language": "Python",
                "methodStub": {
                    "functionName": "characterEquality",
                    "parameter": [
                        {
                            "name": "string1",
                            "type": "string"
                        },
                        {
                            "name": "string2",
                            "type": "string"
                        }
                    ],
                    "returnType": "boolean"
                },
                "testSuite": {
                    "publicTests": [
                        {
                            "testParameter": [
                                "",
                                ""
                            ],
                            "expectedOutput": true
                        },
                        {
                            "testParameter": [
                                "a",
                                "b"
                            ],
                            "expectedOutput": false
                        },
                        {
                            "testParameter": [
                                "ab",
                                "ba"
                            ],
                            "expectedOutput": true
                        },
                        {
                            "testParameter": [
                                "abc",
                                "bbc"
                            ],
                            "expectedOutput": false
                        },
                        {
                            "testParameter": [
                                "abcdefg",
                                "fcebadg"
                            ],
                            "expectedOutput": true
                        }
                    ],
                    "secretTests": [
                        {
                            "testParameter": [
                                "aabbccd",
                                "aabbccdd"
                            ],
                            "expectedOutput": false
                        },
                        {
                            "testParameter": [
                                "bbbb",
                                "bbb"
                            ],
                            "expectedOutput": false
                        },
                        {
                            "testParameter": [
                                "aaabbc",
                                "bacaba"
                            ],
                            "expectedOutput": true
                        },
                        {
                            "testParameter": [
                                "a",
                                ""
                            ],
                            "expectedOutput": false
                        },
                        {
                            "testParameter": [
                                "",
                                "b"
                            ],
                            "expectedOutput": false
                        }
                    ]
                }
            },
            "createdAt": "2021-11-25T13:37:29.056Z",
            "updatedAt": "2021-11-25T13:37:29.056Z",
            "domain": {
                "id": 2,
                "name": "Code",
                "description": "Domain for the code plugin",
                "createdAt": "2021-11-25T13:33:57.099Z",
                "updatedAt": "2021-11-25T13:34:27.205Z"
            },
            "owner": {
                "id": 1,
                "ltiid": null,
                "name": "admin",
                "role": "admin",
                "origin": "local",
                "isActive": true
            }
        },
        {
            "id": 11,
            "title": "PartialStringCopy",
            "description": "Given a string and a array of booleans. Return the characters at the indices of the boolean array with the value true.\nExample: partialStringCopy(\"test\", [true, false, true, false]) = \"ts\"",
            "public": true,
            "rating": null,
            "tags": [
                "Code"
            ],
            "plugin": "Code",
            "details": {
                "language": "Python",
                "methodStub": {
                    "functionName": "partialStringCopy",
                    "parameter": [
                        {
                            "name": "a",
                            "type": "string"
                        },
                        {
                            "name": "b",
                            "type": "booleanArray"
                        }
                    ],
                    "returnType": "string"
                },
                "testSuite": {
                    "publicTests": [
                        {
                            "testParameter": [
                                "abc",
                                [
                                    true,
                                    false,
                                    false
                                ]
                            ],
                            "expectedOutput": "a"
                        },
                        {
                            "testParameter": [
                                "ahbecldleof",
                                [
                                    false,
                                    true,
                                    false,
                                    true,
                                    false,
                                    true,
                                    false,
                                    true,
                                    false,
                                    true,
                                    false
                                ]
                            ],
                            "expectedOutput": "hello"
                        }
                    ],
                    "secretTests": [
                        {
                            "testParameter": [
                                "",
                                []
                            ],
                            "expectedOutput": ""
                        },
                        {
                            "testParameter": [
                                "abc",
                                [
                                    false,
                                    false,
                                    false
                                ]
                            ],
                            "expectedOutput": ""
                        },
                        {
                            "testParameter": [
                                "abc",
                                [
                                    true,
                                    true,
                                    true
                                ]
                            ],
                            "expectedOutput": "abc"
                        }
                    ]
                }
            },
            "createdAt": "2021-11-25T13:37:29.056Z",
            "updatedAt": "2021-11-25T13:37:29.056Z",
            "domain": {
                "id": 2,
                "name": "Code",
                "description": "Domain for the code plugin",
                "createdAt": "2021-11-25T13:33:57.099Z",
                "updatedAt": "2021-11-25T13:34:27.205Z"
            },
            "owner": {
                "id": 1,
                "ltiid": null,
                "name": "admin",
                "role": "admin",
                "origin": "local",
                "isActive": true
            }
        },
        {
            "id": 10,
            "title": "Sum",
            "description": "Given two numbers a and b calculate the sum.\nExample: sum(1,2) = 3",
            "public": true,
            "rating": null,
            "tags": [
                "Code"
            ],
            "plugin": "Code",
            "details": {
                "language": "Python",
                "methodStub": {
                    "functionName": "sum",
                    "parameter": [
                        {
                            "name": "a",
                            "type": "int"
                        },
                        {
                            "name": "b",
                            "type": "int"
                        }
                    ],
                    "returnType": "int"
                },
                "testSuite": {
                    "publicTests": [
                        {
                            "testParameter": [
                                0,
                                0
                            ],
                            "expectedOutput": 0
                        },
                        {
                            "testParameter": [
                                1,
                                1
                            ],
                            "expectedOutput": 2
                        },
                        {
                            "testParameter": [
                                -2,
                                2
                            ],
                            "expectedOutput": 0
                        },
                        {
                            "testParameter": [
                                9999,
                                1
                            ],
                            "expectedOutput": 10000
                        }
                    ],
                    "secretTests": [
                        {
                            "testParameter": [
                                -1,
                                -1
                            ],
                            "expectedOutput": -2
                        },
                        {
                            "testParameter": [
                                -2,
                                3
                            ],
                            "expectedOutput": 1
                        },
                        {
                            "testParameter": [
                                2,
                                -3
                            ],
                            "expectedOutput": -1
                        }
                    ]
                }
            },
            "createdAt": "2021-11-25T13:37:29.056Z",
            "updatedAt": "2021-11-25T13:37:29.056Z",
            "domain": {
                "id": 2,
                "name": "Code",
                "description": "Domain for the code plugin",
                "createdAt": "2021-11-25T13:33:57.099Z",
                "updatedAt": "2021-11-25T13:34:27.205Z"
            },
            "owner": {
                "id": 1,
                "ltiid": null,
                "name": "admin",
                "role": "admin",
                "origin": "local",
                "isActive": true
            }
        }
    ]
}